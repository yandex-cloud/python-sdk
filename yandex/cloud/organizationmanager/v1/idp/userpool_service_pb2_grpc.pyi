"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.access.access_pb2
import yandex.cloud.operation.operation_pb2
import yandex.cloud.organizationmanager.v1.idp.userpool_pb2
import yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class UserpoolServiceStub:
    """A set of methods for managing userpools."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.GetUserpoolRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Userpool,
    ]
    """Returns the specified userpool.

    To get the list of available userpools, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsResponse,
    ]
    """Retrieves the list of userpools in the specified organization."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.CreateUserpoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a userpool in the specified organization."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.UpdateUserpoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified userpool."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.DeleteUserpoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified userpool."""

    GetDomain: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.GetUserpoolDomainRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Domain,
    ]
    """Returns the specified domain for a userpool."""

    ListDomains: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsResponse,
    ]
    """Lists domains for the specified userpool."""

    AddDomain: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.AddUserpoolDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds a domain to the specified userpool."""

    ValidateDomain: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ValidateUserpoolDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Validates the specified domain for a userpool."""

    DeleteDomain: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.DeleteUserpoolDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified domain from a userpool."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsResponse,
    ]
    """Lists operations for the specified userpool."""

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists access bindings for the specified userpool."""

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified userpool."""

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified userpool."""

class UserpoolServiceAsyncStub:
    """A set of methods for managing userpools."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.GetUserpoolRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Userpool,
    ]
    """Returns the specified userpool.

    To get the list of available userpools, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsResponse,
    ]
    """Retrieves the list of userpools in the specified organization."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.CreateUserpoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a userpool in the specified organization."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.UpdateUserpoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified userpool."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.DeleteUserpoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified userpool."""

    GetDomain: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.GetUserpoolDomainRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Domain,
    ]
    """Returns the specified domain for a userpool."""

    ListDomains: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsResponse,
    ]
    """Lists domains for the specified userpool."""

    AddDomain: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.AddUserpoolDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds a domain to the specified userpool."""

    ValidateDomain: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ValidateUserpoolDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Validates the specified domain for a userpool."""

    DeleteDomain: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.DeleteUserpoolDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified domain from a userpool."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsRequest,
        yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsResponse,
    ]
    """Lists operations for the specified userpool."""

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists access bindings for the specified userpool."""

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified userpool."""

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified userpool."""

class UserpoolServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing userpools."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.GetUserpoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Userpool, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Userpool]]:
        """Returns the specified userpool.

        To get the list of available userpools, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsResponse, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolsResponse]]:
        """Retrieves the list of userpools in the specified organization."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.CreateUserpoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a userpool in the specified organization."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.UpdateUserpoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified userpool."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.DeleteUserpoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified userpool."""

    @abc.abstractmethod
    def GetDomain(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.GetUserpoolDomainRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Domain, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.idp.userpool_pb2.Domain]]:
        """Returns the specified domain for a userpool."""

    @abc.abstractmethod
    def ListDomains(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsResponse, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolDomainsResponse]]:
        """Lists domains for the specified userpool."""

    @abc.abstractmethod
    def AddDomain(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.AddUserpoolDomainRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Adds a domain to the specified userpool."""

    @abc.abstractmethod
    def ValidateDomain(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ValidateUserpoolDomainRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Validates the specified domain for a userpool."""

    @abc.abstractmethod
    def DeleteDomain(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.DeleteUserpoolDomainRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified domain from a userpool."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsResponse, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.idp.userpool_service_pb2.ListUserpoolOperationsResponse]]:
        """Lists operations for the specified userpool."""

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.access.access_pb2.ListAccessBindingsResponse]]:
        """Lists access bindings for the specified userpool."""

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sets access bindings for the specified userpool."""

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates access bindings for the specified userpool."""

def add_UserpoolServiceServicer_to_server(servicer: UserpoolServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

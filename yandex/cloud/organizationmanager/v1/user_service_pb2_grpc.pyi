"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.operation.operation_pb2
import yandex.cloud.organizationmanager.v1.user_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class UserServiceStub:
    """A set of methods for managing Organization users."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ListMembers: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersRequest,
        yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersResponse,
    ]
    """List organization active members."""

    DeleteMembership: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_service_pb2.DeleteMembershipRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete user membership."""

class UserServiceAsyncStub:
    """A set of methods for managing Organization users."""

    ListMembers: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersRequest,
        yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersResponse,
    ]
    """List organization active members."""

    DeleteMembership: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_service_pb2.DeleteMembershipRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete user membership."""

class UserServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Organization users."""

    @abc.abstractmethod
    def ListMembers(
        self,
        request: yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersResponse, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.user_service_pb2.ListMembersResponse]]:
        """List organization active members."""

    @abc.abstractmethod
    def DeleteMembership(
        self,
        request: yandex.cloud.organizationmanager.v1.user_service_pb2.DeleteMembershipRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Delete user membership."""

def add_UserServiceServicer_to_server(servicer: UserServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

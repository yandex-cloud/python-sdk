"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.operation.operation_pb2
import yandex.cloud.organizationmanager.v1.user_ssh_key_pb2
import yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class UserSshKeyServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.GetUserSshKeyRequest,
        yandex.cloud.organizationmanager.v1.user_ssh_key_pb2.UserSshKey,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysRequest,
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysResponse,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.CreateUserSshKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.UpdateUserSshKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.DeleteUserSshKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

class UserSshKeyServiceAsyncStub:
    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.GetUserSshKeyRequest,
        yandex.cloud.organizationmanager.v1.user_ssh_key_pb2.UserSshKey,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysRequest,
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysResponse,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.CreateUserSshKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.UpdateUserSshKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.DeleteUserSshKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

class UserSshKeyServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.GetUserSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.user_ssh_key_pb2.UserSshKey, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.user_ssh_key_pb2.UserSshKey]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysResponse, collections.abc.Awaitable[yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.ListUserSshKeysResponse]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.CreateUserSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.UpdateUserSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.organizationmanager.v1.user_ssh_key_service_pb2.DeleteUserSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]: ...

def add_UserSshKeyServiceServicer_to_server(servicer: UserSshKeyServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

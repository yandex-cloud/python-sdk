"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.mdb.greenplum.v1.pxf_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class PXFDatasourceServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesRequest,
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesResponse,
    ]
    """List all PXF datasources"""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.CreatePXFDatasourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates PXF datasource"""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.UpdatePXFDatasourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Update PXF datasource"""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.DeletePXFDatasourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete PXF datasource"""

class PXFDatasourceServiceAsyncStub:
    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesRequest,
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesResponse,
    ]
    """List all PXF datasources"""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.CreatePXFDatasourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates PXF datasource"""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.UpdatePXFDatasourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Update PXF datasource"""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.DeletePXFDatasourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete PXF datasource"""

class PXFDatasourceServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesResponse, collections.abc.Awaitable[yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.ListPXFDatasourcesResponse]]:
        """List all PXF datasources"""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.CreatePXFDatasourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates PXF datasource"""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.UpdatePXFDatasourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Update PXF datasource"""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.mdb.greenplum.v1.pxf_service_pb2.DeletePXFDatasourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Delete PXF datasource"""

def add_PXFDatasourceServiceServicer_to_server(servicer: PXFDatasourceServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

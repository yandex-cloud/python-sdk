"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class HBARuleServiceStub:
    """A set of methods for managing Greenplum clusters."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesRequest,
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse,
    ]
    """Retrieves a list of HBA rules for Greenplum clusters."""

    ListAtRevision: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesAtRevisionRequest,
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse,
    ]
    """Retrieves a list of HBA rules for Greenplum clusters for particular revision."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.CreateHBARuleRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Create single HBA rule for the specified Greenplum cluster to the end of HBA rules list."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.UpdateHBARuleRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Update specified HBA rule for the specified Greenplum cluster without changind it order."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.DeleteHBARuleRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete specified HBA rule for the specified Greenplum cluster."""

    BatchUpdate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.BatchUpdateHBARulesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Modifies all HBA rules for the specified Greenplum cluster."""

class HBARuleServiceAsyncStub:
    """A set of methods for managing Greenplum clusters."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesRequest,
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse,
    ]
    """Retrieves a list of HBA rules for Greenplum clusters."""

    ListAtRevision: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesAtRevisionRequest,
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse,
    ]
    """Retrieves a list of HBA rules for Greenplum clusters for particular revision."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.CreateHBARuleRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Create single HBA rule for the specified Greenplum cluster to the end of HBA rules list."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.UpdateHBARuleRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Update specified HBA rule for the specified Greenplum cluster without changind it order."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.DeleteHBARuleRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Delete specified HBA rule for the specified Greenplum cluster."""

    BatchUpdate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.BatchUpdateHBARulesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Modifies all HBA rules for the specified Greenplum cluster."""

class HBARuleServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Greenplum clusters."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse, collections.abc.Awaitable[yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse]]:
        """Retrieves a list of HBA rules for Greenplum clusters."""

    @abc.abstractmethod
    def ListAtRevision(
        self,
        request: yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesAtRevisionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse, collections.abc.Awaitable[yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.ListHBARulesResponse]]:
        """Retrieves a list of HBA rules for Greenplum clusters for particular revision."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.CreateHBARuleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Create single HBA rule for the specified Greenplum cluster to the end of HBA rules list."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.UpdateHBARuleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Update specified HBA rule for the specified Greenplum cluster without changind it order."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.DeleteHBARuleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Delete specified HBA rule for the specified Greenplum cluster."""

    @abc.abstractmethod
    def BatchUpdate(
        self,
        request: yandex.cloud.mdb.greenplum.v1.hba_rule_service_pb2.BatchUpdateHBARulesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Modifies all HBA rules for the specified Greenplum cluster."""

def add_HBARuleServiceServicer_to_server(servicer: HBARuleServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

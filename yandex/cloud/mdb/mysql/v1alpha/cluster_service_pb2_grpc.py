# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from yandex.cloud.mdb.mysql.v1alpha import cluster_pb2 as yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__pb2
from yandex.cloud.mdb.mysql.v1alpha import cluster_service_pb2 as yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2
from yandex.cloud.operation import operation_pb2 as yandex_dot_cloud_dot_operation_dot_operation__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in yandex/cloud/mdb/mysql/v1alpha/cluster_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ClusterServiceStub(object):
    """A set of methods for managing MySQL clusters.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Get',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.GetClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__pb2.Cluster.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/List',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClustersRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClustersResponse.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Create',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.CreateClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Update',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.UpdateClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Delete',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.DeleteClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Start = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Start',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.StartClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Stop = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Stop',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.StopClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Backup = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Backup',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.BackupClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.Restore = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Restore',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.RestoreClusterRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.ListLogs = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListLogs',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterLogsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterLogsResponse.FromString,
                _registered_method=True)
        self.ListOperations = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListOperations',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterOperationsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterOperationsResponse.FromString,
                _registered_method=True)
        self.ListBackups = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListBackups',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterBackupsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterBackupsResponse.FromString,
                _registered_method=True)
        self.ListHosts = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListHosts',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterHostsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterHostsResponse.FromString,
                _registered_method=True)
        self.AddHosts = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/AddHosts',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.AddClusterHostsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.DeleteHosts = channel.unary_unary(
                '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/DeleteHosts',
                request_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.DeleteClusterHostsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)


class ClusterServiceServicer(object):
    """A set of methods for managing MySQL clusters.
    """

    def Get(self, request, context):
        """Returns the specified MySQL cluster.

        To get the list of available MySQL clusters, make a [List] request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Retrieves the list of MySQL clusters that belong to the specified folder.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Creates a MySQL cluster in the specified folder.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Modifies the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Deletes the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Starts the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Stops the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Backup(self, request, context):
        """Creates a backup for the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Restore(self, request, context):
        """Creates a new MySQL cluster using the specified backup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLogs(self, request, context):
        """Retrieves logs for the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOperations(self, request, context):
        """Retrieves the list of operations for the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBackups(self, request, context):
        """Retrieves the list of available backups for the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHosts(self, request, context):
        """Retrieves a list of hosts for the specified MySQL cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddHosts(self, request, context):
        """Creates new hosts for a cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteHosts(self, request, context):
        """Deletes the specified hosts for a cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.GetClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__pb2.Cluster.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClustersRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClustersResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.CreateClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.UpdateClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.DeleteClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.StartClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.StopClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Backup': grpc.unary_unary_rpc_method_handler(
                    servicer.Backup,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.BackupClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Restore': grpc.unary_unary_rpc_method_handler(
                    servicer.Restore,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.RestoreClusterRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'ListLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLogs,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterLogsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterLogsResponse.SerializeToString,
            ),
            'ListOperations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOperations,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterOperationsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterOperationsResponse.SerializeToString,
            ),
            'ListBackups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBackups,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterBackupsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterBackupsResponse.SerializeToString,
            ),
            'ListHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHosts,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterHostsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterHostsResponse.SerializeToString,
            ),
            'AddHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.AddHosts,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.AddClusterHostsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'DeleteHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteHosts,
                    request_deserializer=yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.DeleteClusterHostsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.mdb.mysql.v1alpha.ClusterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('yandex.cloud.mdb.mysql.v1alpha.ClusterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ClusterService(object):
    """A set of methods for managing MySQL clusters.
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Get',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.GetClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__pb2.Cluster.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/List',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClustersRequest.SerializeToString,
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClustersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Create',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.CreateClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Update',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.UpdateClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Delete',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.DeleteClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Start',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.StartClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Stop',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.StopClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Backup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Backup',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.BackupClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Restore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/Restore',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.RestoreClusterRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListLogs',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterLogsRequest.SerializeToString,
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOperations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListOperations',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterOperationsRequest.SerializeToString,
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterOperationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBackups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListBackups',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterBackupsRequest.SerializeToString,
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterBackupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/ListHosts',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterHostsRequest.SerializeToString,
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.ListClusterHostsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/AddHosts',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.AddClusterHostsRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.mdb.mysql.v1alpha.ClusterService/DeleteHosts',
            yandex_dot_cloud_dot_mdb_dot_mysql_dot_v1alpha_dot_cluster__service__pb2.DeleteClusterHostsRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

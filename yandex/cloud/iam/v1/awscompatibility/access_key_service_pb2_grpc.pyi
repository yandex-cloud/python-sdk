"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.iam.v1.awscompatibility.access_key_pb2
import yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class AccessKeyServiceStub:
    """A set of methods for managing access keys."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysResponse,
    ]
    """Retrieves the list of access keys for the specified service account."""

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.GetAccessKeyRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_pb2.AccessKey,
    ]
    """Returns the specified access key.

    To get the list of available access keys, make a [List] request.
    """

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyResponse,
    ]
    """Creates an access key for the specified service account."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.UpdateAccessKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified access key."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.DeleteAccessKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified access key."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsResponse,
    ]
    """Retrieves the list of operations for the specified access key."""

class AccessKeyServiceAsyncStub:
    """A set of methods for managing access keys."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysResponse,
    ]
    """Retrieves the list of access keys for the specified service account."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.GetAccessKeyRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_pb2.AccessKey,
    ]
    """Returns the specified access key.

    To get the list of available access keys, make a [List] request.
    """

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyResponse,
    ]
    """Creates an access key for the specified service account."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.UpdateAccessKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified access key."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.DeleteAccessKeyRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified access key."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsRequest,
        yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsResponse,
    ]
    """Retrieves the list of operations for the specified access key."""

class AccessKeyServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing access keys."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysResponse, collections.abc.Awaitable[yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeysResponse]]:
        """Retrieves the list of access keys for the specified service account."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.GetAccessKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iam.v1.awscompatibility.access_key_pb2.AccessKey, collections.abc.Awaitable[yandex.cloud.iam.v1.awscompatibility.access_key_pb2.AccessKey]]:
        """Returns the specified access key.

        To get the list of available access keys, make a [List] request.
        """

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyResponse, collections.abc.Awaitable[yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.CreateAccessKeyResponse]]:
        """Creates an access key for the specified service account."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.UpdateAccessKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified access key."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.DeleteAccessKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified access key."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsResponse, collections.abc.Awaitable[yandex.cloud.iam.v1.awscompatibility.access_key_service_pb2.ListAccessKeyOperationsResponse]]:
        """Retrieves the list of operations for the specified access key."""

def add_AccessKeyServiceServicer_to_server(servicer: AccessKeyServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

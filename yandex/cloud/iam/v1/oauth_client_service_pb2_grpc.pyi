"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.iam.v1.oauth_client_pb2
import yandex.cloud.iam.v1.oauth_client_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class OAuthClientServiceStub:
    """A set of methods for managing OAuthClient resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.GetOAuthClientRequest,
        yandex.cloud.iam.v1.oauth_client_pb2.OAuthClient,
    ]
    """Returns the sepcified OAuthClient resource.

    To get the list of available OAuthClient resources, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsRequest,
        yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsResponse,
    ]
    """Retrieves the list of OAuthClient resources views in the specified folder"""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.CreateOAuthClientRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an oauth client in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.UpdateOAuthClientRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified oauth client."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.DeleteOAuthClientRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified oauth client with all its secrets."""

class OAuthClientServiceAsyncStub:
    """A set of methods for managing OAuthClient resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.GetOAuthClientRequest,
        yandex.cloud.iam.v1.oauth_client_pb2.OAuthClient,
    ]
    """Returns the sepcified OAuthClient resource.

    To get the list of available OAuthClient resources, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsRequest,
        yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsResponse,
    ]
    """Retrieves the list of OAuthClient resources views in the specified folder"""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.CreateOAuthClientRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an oauth client in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.UpdateOAuthClientRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified oauth client."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iam.v1.oauth_client_service_pb2.DeleteOAuthClientRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified oauth client with all its secrets."""

class OAuthClientServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing OAuthClient resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.iam.v1.oauth_client_service_pb2.GetOAuthClientRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iam.v1.oauth_client_pb2.OAuthClient, collections.abc.Awaitable[yandex.cloud.iam.v1.oauth_client_pb2.OAuthClient]]:
        """Returns the sepcified OAuthClient resource.

        To get the list of available OAuthClient resources, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsResponse, collections.abc.Awaitable[yandex.cloud.iam.v1.oauth_client_service_pb2.ListOAuthClientsResponse]]:
        """Retrieves the list of OAuthClient resources views in the specified folder"""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.iam.v1.oauth_client_service_pb2.CreateOAuthClientRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates an oauth client in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.iam.v1.oauth_client_service_pb2.UpdateOAuthClientRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified oauth client."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.iam.v1.oauth_client_service_pb2.DeleteOAuthClientRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified oauth client with all its secrets."""

def add_OAuthClientServiceServicer_to_server(servicer: OAuthClientServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

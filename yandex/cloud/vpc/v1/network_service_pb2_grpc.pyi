"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.operation.operation_pb2
import yandex.cloud.vpc.v1.network_pb2
import yandex.cloud.vpc.v1.network_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class NetworkServiceStub:
    """A set of methods for managing Network resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.GetNetworkRequest,
        yandex.cloud.vpc.v1.network_pb2.Network,
    ]
    """Returns the specified Network resource.

    Get the list of available Network resources by making a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworksRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworksResponse,
    ]
    """Retrieves the list of Network resources in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.CreateNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a network in the specified folder using the data specified in the request.
    Method starts an asynchronous operation that can be cancelled while it is in progress.
    """

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.UpdateNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified network.
    Method starts an asynchronous operation that can be cancelled while it is in progress.
    """

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.DeleteNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified network."""

    ListSubnets: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsResponse,
    ]
    """Lists subnets from the specified network."""

    ListSecurityGroups: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsResponse,
    ]
    """Lists security groups from the specified network."""

    ListRouteTables: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesResponse,
    ]
    """Lists route tables from the specified network."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsResponse,
    ]
    """Lists operations for the specified network."""

    Move: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.MoveNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Move network to another folder."""

class NetworkServiceAsyncStub:
    """A set of methods for managing Network resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.GetNetworkRequest,
        yandex.cloud.vpc.v1.network_pb2.Network,
    ]
    """Returns the specified Network resource.

    Get the list of available Network resources by making a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworksRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworksResponse,
    ]
    """Retrieves the list of Network resources in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.CreateNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a network in the specified folder using the data specified in the request.
    Method starts an asynchronous operation that can be cancelled while it is in progress.
    """

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.UpdateNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified network.
    Method starts an asynchronous operation that can be cancelled while it is in progress.
    """

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.DeleteNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified network."""

    ListSubnets: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsResponse,
    ]
    """Lists subnets from the specified network."""

    ListSecurityGroups: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsResponse,
    ]
    """Lists security groups from the specified network."""

    ListRouteTables: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesResponse,
    ]
    """Lists route tables from the specified network."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsRequest,
        yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsResponse,
    ]
    """Lists operations for the specified network."""

    Move: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.vpc.v1.network_service_pb2.MoveNetworkRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Move network to another folder."""

class NetworkServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Network resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.GetNetworkRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.vpc.v1.network_pb2.Network, collections.abc.Awaitable[yandex.cloud.vpc.v1.network_pb2.Network]]:
        """Returns the specified Network resource.

        Get the list of available Network resources by making a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.ListNetworksRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.vpc.v1.network_service_pb2.ListNetworksResponse, collections.abc.Awaitable[yandex.cloud.vpc.v1.network_service_pb2.ListNetworksResponse]]:
        """Retrieves the list of Network resources in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.CreateNetworkRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a network in the specified folder using the data specified in the request.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
        """

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.UpdateNetworkRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified network.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
        """

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.DeleteNetworkRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified network."""

    @abc.abstractmethod
    def ListSubnets(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsResponse, collections.abc.Awaitable[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSubnetsResponse]]:
        """Lists subnets from the specified network."""

    @abc.abstractmethod
    def ListSecurityGroups(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsResponse, collections.abc.Awaitable[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkSecurityGroupsResponse]]:
        """Lists security groups from the specified network."""

    @abc.abstractmethod
    def ListRouteTables(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesResponse, collections.abc.Awaitable[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkRouteTablesResponse]]:
        """Lists route tables from the specified network."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsResponse, collections.abc.Awaitable[yandex.cloud.vpc.v1.network_service_pb2.ListNetworkOperationsResponse]]:
        """Lists operations for the specified network."""

    @abc.abstractmethod
    def Move(
        self,
        request: yandex.cloud.vpc.v1.network_service_pb2.MoveNetworkRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Move network to another folder."""

def add_NetworkServiceServicer_to_server(servicer: NetworkServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.ai.foundation_models.v1.image_generation.image_generation_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ImageGenerationAsyncServiceStub:
    """Service for obtaining images from input data."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Generate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.foundation_models.v1.image_generation.image_generation_service_pb2.ImageGenerationRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """A method for generating an image based on a textual description."""

class ImageGenerationAsyncServiceAsyncStub:
    """Service for obtaining images from input data."""

    Generate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.foundation_models.v1.image_generation.image_generation_service_pb2.ImageGenerationRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """A method for generating an image based on a textual description."""

class ImageGenerationAsyncServiceServicer(metaclass=abc.ABCMeta):
    """Service for obtaining images from input data."""

    @abc.abstractmethod
    def Generate(
        self,
        request: yandex.cloud.ai.foundation_models.v1.image_generation.image_generation_service_pb2.ImageGenerationRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """A method for generating an image based on a textual description."""

def add_ImageGenerationAsyncServiceServicer_to_server(servicer: ImageGenerationAsyncServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

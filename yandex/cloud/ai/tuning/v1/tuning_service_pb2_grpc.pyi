"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.ai.tuning.v1.tuning_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class TuningServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Tune: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.TuningRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsResponse,
    ]

    Describe: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningResponse,
    ]

    Cancel: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningResponse,
    ]

    GetMetricsUrl: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlResponse,
    ]

    GetOptions: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsResponse,
    ]

    ListErrors: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsResponse,
    ]

    CreateDraft: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftResponse,
    ]

    UpdateDraft: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftResponse,
    ]

    DeleteDraft: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftResponse,
    ]

    TuneDraft: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.TuneDraftRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

class TuningServiceAsyncStub:
    Tune: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.TuningRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsResponse,
    ]

    Describe: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningResponse,
    ]

    Cancel: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningResponse,
    ]

    GetMetricsUrl: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlResponse,
    ]

    GetOptions: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsResponse,
    ]

    ListErrors: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsResponse,
    ]

    CreateDraft: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftResponse,
    ]

    UpdateDraft: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftResponse,
    ]

    DeleteDraft: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftRequest,
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftResponse,
    ]

    TuneDraft: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.tuning.v1.tuning_service_pb2.TuneDraftRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

class TuningServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Tune(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.TuningRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListTuningsResponse]]: ...

    @abc.abstractmethod
    def Describe(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.DescribeTuningResponse]]: ...

    @abc.abstractmethod
    def Cancel(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.CancelTuningResponse]]: ...

    @abc.abstractmethod
    def GetMetricsUrl(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetMetricsUrlResponse]]: ...

    @abc.abstractmethod
    def GetOptions(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.GetOptionsResponse]]: ...

    @abc.abstractmethod
    def ListErrors(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.ListErrorsResponse]]: ...

    @abc.abstractmethod
    def CreateDraft(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.CreateTuningDraftResponse]]: ...

    @abc.abstractmethod
    def UpdateDraft(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.UpdateTuningDraftResponse]]: ...

    @abc.abstractmethod
    def DeleteDraft(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftResponse, collections.abc.Awaitable[yandex.cloud.ai.tuning.v1.tuning_service_pb2.DeleteTuningDraftResponse]]: ...

    @abc.abstractmethod
    def TuneDraft(
        self,
        request: yandex.cloud.ai.tuning.v1.tuning_service_pb2.TuneDraftRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]: ...

def add_TuningServiceServicer_to_server(servicer: TuningServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

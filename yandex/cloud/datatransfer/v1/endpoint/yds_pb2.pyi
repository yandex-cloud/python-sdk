"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing
import yandex.cloud.datatransfer.v1.endpoint.parsers_pb2
import yandex.cloud.datatransfer.v1.endpoint.serializers_pb2

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _YdsCompressionCodec:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _YdsCompressionCodecEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_YdsCompressionCodec.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    YDS_COMPRESSION_CODEC_UNSPECIFIED: _YdsCompressionCodec.ValueType  # 0
    YDS_COMPRESSION_CODEC_RAW: _YdsCompressionCodec.ValueType  # 1
    YDS_COMPRESSION_CODEC_GZIP: _YdsCompressionCodec.ValueType  # 2
    YDS_COMPRESSION_CODEC_ZSTD: _YdsCompressionCodec.ValueType  # 4

class YdsCompressionCodec(_YdsCompressionCodec, metaclass=_YdsCompressionCodecEnumTypeWrapper): ...

YDS_COMPRESSION_CODEC_UNSPECIFIED: YdsCompressionCodec.ValueType  # 0
YDS_COMPRESSION_CODEC_RAW: YdsCompressionCodec.ValueType  # 1
YDS_COMPRESSION_CODEC_GZIP: YdsCompressionCodec.ValueType  # 2
YDS_COMPRESSION_CODEC_ZSTD: YdsCompressionCodec.ValueType  # 4
global___YdsCompressionCodec = YdsCompressionCodec

@typing.final
class YDSSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATABASE_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    SUPPORTED_CODECS_FIELD_NUMBER: builtins.int
    PARSER_FIELD_NUMBER: builtins.int
    ALLOW_TTL_REWIND_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUPS_FIELD_NUMBER: builtins.int
    CONSUMER_FIELD_NUMBER: builtins.int
    database: builtins.str
    """Database"""
    stream: builtins.str
    """Stream"""
    service_account_id: builtins.str
    """SA which has read access to the stream."""
    allow_ttl_rewind: builtins.bool
    """Should continue working, if consumer read lag exceed TTL of topic
    False: stop the transfer in error state, if detected lost data. True: continue
    working with losing part of data
    """
    endpoint: builtins.str
    """for dedicated db"""
    subnet_id: builtins.str
    """Network interface for endpoint. If none will assume public ipv4"""
    consumer: builtins.str
    """for important streams"""
    @property
    def supported_codecs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___YdsCompressionCodec.ValueType]:
        """Compression codec"""

    @property
    def parser(self) -> yandex.cloud.datatransfer.v1.endpoint.parsers_pb2.Parser:
        """Data parsing rules"""

    @property
    def security_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Security groups"""

    def __init__(
        self,
        *,
        database: builtins.str = ...,
        stream: builtins.str = ...,
        service_account_id: builtins.str = ...,
        supported_codecs: collections.abc.Iterable[global___YdsCompressionCodec.ValueType] | None = ...,
        parser: yandex.cloud.datatransfer.v1.endpoint.parsers_pb2.Parser | None = ...,
        allow_ttl_rewind: builtins.bool = ...,
        endpoint: builtins.str = ...,
        subnet_id: builtins.str = ...,
        security_groups: collections.abc.Iterable[builtins.str] | None = ...,
        consumer: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["parser", b"parser"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allow_ttl_rewind", b"allow_ttl_rewind", "consumer", b"consumer", "database", b"database", "endpoint", b"endpoint", "parser", b"parser", "security_groups", b"security_groups", "service_account_id", b"service_account_id", "stream", b"stream", "subnet_id", b"subnet_id", "supported_codecs", b"supported_codecs"]) -> None: ...

global___YDSSource = YDSSource

@typing.final
class YDSTarget(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATABASE_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    SAVE_TX_ORDER_FIELD_NUMBER: builtins.int
    SERIALIZER_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUPS_FIELD_NUMBER: builtins.int
    database: builtins.str
    """Database"""
    stream: builtins.str
    """Stream"""
    service_account_id: builtins.str
    """SA which has read access to the stream."""
    save_tx_order: builtins.bool
    """Save transaction order
    Not to split events queue into separate per-table queues.
    Incompatible with setting Topic prefix, only with Topic full name.
    """
    endpoint: builtins.str
    """for dedicated db"""
    subnet_id: builtins.str
    """Network interface for endpoint. If none will assume public ipv4"""
    @property
    def serializer(self) -> yandex.cloud.datatransfer.v1.endpoint.serializers_pb2.Serializer:
        """Data serialization format"""

    @property
    def security_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Security groups"""

    def __init__(
        self,
        *,
        database: builtins.str = ...,
        stream: builtins.str = ...,
        service_account_id: builtins.str = ...,
        save_tx_order: builtins.bool = ...,
        serializer: yandex.cloud.datatransfer.v1.endpoint.serializers_pb2.Serializer | None = ...,
        endpoint: builtins.str = ...,
        subnet_id: builtins.str = ...,
        security_groups: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["serializer", b"serializer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["database", b"database", "endpoint", b"endpoint", "save_tx_order", b"save_tx_order", "security_groups", b"security_groups", "serializer", b"serializer", "service_account_id", b"service_account_id", "stream", b"stream", "subnet_id", b"subnet_id"]) -> None: ...

global___YDSTarget = YDSTarget

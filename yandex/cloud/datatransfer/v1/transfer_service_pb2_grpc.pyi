"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.datatransfer.v1.transfer_pb2
import yandex.cloud.datatransfer.v1.transfer_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class TransferServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.CreateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a transfer in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.UpdateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified transfer."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.DeleteTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified transfer."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersRequest,
        yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersResponse,
    ]
    """Lists transfers in the specified folder."""

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.GetTransferRequest,
        yandex.cloud.datatransfer.v1.transfer_pb2.Transfer,
    ]
    """Returns the specified transfer.

    To get the list of all available transfers, make a [List] request.
    """

    Deactivate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.DeactivateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deactivates the specified transfer.

    To get the list of all available transfers, make a [List] request.
    """

    Activate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.ActivateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Activates the specified transfer.

    To get the list of all available transfers, make a [List] request.
    """

class TransferServiceAsyncStub:
    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.CreateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a transfer in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.UpdateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified transfer."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.DeleteTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified transfer."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersRequest,
        yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersResponse,
    ]
    """Lists transfers in the specified folder."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.GetTransferRequest,
        yandex.cloud.datatransfer.v1.transfer_pb2.Transfer,
    ]
    """Returns the specified transfer.

    To get the list of all available transfers, make a [List] request.
    """

    Deactivate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.DeactivateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deactivates the specified transfer.

    To get the list of all available transfers, make a [List] request.
    """

    Activate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datatransfer.v1.transfer_service_pb2.ActivateTransferRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Activates the specified transfer.

    To get the list of all available transfers, make a [List] request.
    """

class TransferServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.CreateTransferRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a transfer in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.UpdateTransferRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified transfer."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.DeleteTransferRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified transfer."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersResponse, collections.abc.Awaitable[yandex.cloud.datatransfer.v1.transfer_service_pb2.ListTransfersResponse]]:
        """Lists transfers in the specified folder."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.GetTransferRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datatransfer.v1.transfer_pb2.Transfer, collections.abc.Awaitable[yandex.cloud.datatransfer.v1.transfer_pb2.Transfer]]:
        """Returns the specified transfer.

        To get the list of all available transfers, make a [List] request.
        """

    @abc.abstractmethod
    def Deactivate(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.DeactivateTransferRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deactivates the specified transfer.

        To get the list of all available transfers, make a [List] request.
        """

    @abc.abstractmethod
    def Activate(
        self,
        request: yandex.cloud.datatransfer.v1.transfer_service_pb2.ActivateTransferRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Activates the specified transfer.

        To get the list of all available transfers, make a [List] request.
        """

def add_TransferServiceServicer_to_server(servicer: TransferServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.k8s.v1.version_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class VersionServiceStub:
    """A set of methods for managing Kubernetes versions."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.version_service_pb2.ListVersionsRequest,
        yandex.cloud.k8s.v1.version_service_pb2.ListVersionsResponse,
    ]
    """Retrieves the list of versions in the specified release channel."""

class VersionServiceAsyncStub:
    """A set of methods for managing Kubernetes versions."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.k8s.v1.version_service_pb2.ListVersionsRequest,
        yandex.cloud.k8s.v1.version_service_pb2.ListVersionsResponse,
    ]
    """Retrieves the list of versions in the specified release channel."""

class VersionServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Kubernetes versions."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.k8s.v1.version_service_pb2.ListVersionsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.k8s.v1.version_service_pb2.ListVersionsResponse, collections.abc.Awaitable[yandex.cloud.k8s.v1.version_service_pb2.ListVersionsResponse]]:
        """Retrieves the list of versions in the specified release channel."""

def add_VersionServiceServicer_to_server(servicer: VersionServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TitleWidget(google.protobuf.message.Message):
    """Title widget."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TitleSize:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TitleSizeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TitleWidget._TitleSize.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TITLE_SIZE_UNSPECIFIED: TitleWidget._TitleSize.ValueType  # 0
        TITLE_SIZE_XS: TitleWidget._TitleSize.ValueType  # 1
        """Extra small size."""
        TITLE_SIZE_S: TitleWidget._TitleSize.ValueType  # 2
        """Small size."""
        TITLE_SIZE_M: TitleWidget._TitleSize.ValueType  # 3
        """Middle size."""
        TITLE_SIZE_L: TitleWidget._TitleSize.ValueType  # 4
        """Large size."""

    class TitleSize(_TitleSize, metaclass=_TitleSizeEnumTypeWrapper):
        """Title size."""

    TITLE_SIZE_UNSPECIFIED: TitleWidget.TitleSize.ValueType  # 0
    TITLE_SIZE_XS: TitleWidget.TitleSize.ValueType  # 1
    """Extra small size."""
    TITLE_SIZE_S: TitleWidget.TitleSize.ValueType  # 2
    """Small size."""
    TITLE_SIZE_M: TitleWidget.TitleSize.ValueType  # 3
    """Middle size."""
    TITLE_SIZE_L: TitleWidget.TitleSize.ValueType  # 4
    """Large size."""

    TEXT_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    text: builtins.str
    """Title text."""
    size: global___TitleWidget.TitleSize.ValueType
    """Title size."""
    def __init__(
        self,
        *,
        text: builtins.str = ...,
        size: global___TitleWidget.TitleSize.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["size", b"size", "text", b"text"]) -> None: ...

global___TitleWidget = TitleWidget

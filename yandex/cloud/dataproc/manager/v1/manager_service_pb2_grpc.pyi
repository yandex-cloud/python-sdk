"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.dataproc.manager.v1.manager_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class DataprocManagerServiceStub:
    """Data Proc manager service definition."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Report: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportRequest,
        yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportReply,
    ]
    """Sends a status report from a host."""

class DataprocManagerServiceAsyncStub:
    """Data Proc manager service definition."""

    Report: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportRequest,
        yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportReply,
    ]
    """Sends a status report from a host."""

class DataprocManagerServiceServicer(metaclass=abc.ABCMeta):
    """Data Proc manager service definition."""

    @abc.abstractmethod
    def Report(
        self,
        request: yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportReply, collections.abc.Awaitable[yandex.cloud.dataproc.manager.v1.manager_service_pb2.ReportReply]]:
        """Sends a status report from a host."""

def add_DataprocManagerServiceServicer_to_server(servicer: DataprocManagerServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

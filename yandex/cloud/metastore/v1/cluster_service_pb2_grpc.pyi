"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.metastore.v1.cluster_pb2
import yandex.cloud.metastore.v1.cluster_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ClusterServiceStub:
    """A set of methods for managing Hive Metastore Cluster resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.GetClusterRequest,
        yandex.cloud.metastore.v1.cluster_pb2.Cluster,
    ]
    """Returns the specified Hive Metastore Cluster resource.

    To get the list of available Hive Metastore Cluster resources, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersRequest,
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersResponse,
    ]
    """Retrieves the list of Hive Metastore Cluster resources that belong
    to the specified folder.
    """

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsRequest,
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsResponse,
    ]
    """Retrieves the list of Operation resources for the specified Hive Metastore Cluster."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.CreateClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a Hive Metastore Cluster in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.UpdateClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates configuration of the specified Hive Metastore Cluster."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.DeleteClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified Hive Metastore Cluster."""

    Stop: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.StopClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stop the specified Hive Metastore Cluster."""

    Start: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.StartClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Start the specified Hive a Metastore Cluster."""

    ImportData: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ImportDataRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Import data to the specified Hive Metastore Cluster."""

    ExportData: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ExportDataRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Export data from the specified Hive Metastore Cluster."""

class ClusterServiceAsyncStub:
    """A set of methods for managing Hive Metastore Cluster resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.GetClusterRequest,
        yandex.cloud.metastore.v1.cluster_pb2.Cluster,
    ]
    """Returns the specified Hive Metastore Cluster resource.

    To get the list of available Hive Metastore Cluster resources, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersRequest,
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersResponse,
    ]
    """Retrieves the list of Hive Metastore Cluster resources that belong
    to the specified folder.
    """

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsRequest,
        yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsResponse,
    ]
    """Retrieves the list of Operation resources for the specified Hive Metastore Cluster."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.CreateClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a Hive Metastore Cluster in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.UpdateClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates configuration of the specified Hive Metastore Cluster."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.DeleteClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified Hive Metastore Cluster."""

    Stop: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.StopClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stop the specified Hive Metastore Cluster."""

    Start: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.StartClusterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Start the specified Hive a Metastore Cluster."""

    ImportData: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ImportDataRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Import data to the specified Hive Metastore Cluster."""

    ExportData: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.metastore.v1.cluster_service_pb2.ExportDataRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Export data from the specified Hive Metastore Cluster."""

class ClusterServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Hive Metastore Cluster resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.GetClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.metastore.v1.cluster_pb2.Cluster, collections.abc.Awaitable[yandex.cloud.metastore.v1.cluster_pb2.Cluster]]:
        """Returns the specified Hive Metastore Cluster resource.

        To get the list of available Hive Metastore Cluster resources, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersResponse, collections.abc.Awaitable[yandex.cloud.metastore.v1.cluster_service_pb2.ListClustersResponse]]:
        """Retrieves the list of Hive Metastore Cluster resources that belong
        to the specified folder.
        """

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsResponse, collections.abc.Awaitable[yandex.cloud.metastore.v1.cluster_service_pb2.ListClusterOperationsResponse]]:
        """Retrieves the list of Operation resources for the specified Hive Metastore Cluster."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.CreateClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a Hive Metastore Cluster in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.UpdateClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates configuration of the specified Hive Metastore Cluster."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.DeleteClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified Hive Metastore Cluster."""

    @abc.abstractmethod
    def Stop(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.StopClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Stop the specified Hive Metastore Cluster."""

    @abc.abstractmethod
    def Start(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.StartClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Start the specified Hive a Metastore Cluster."""

    @abc.abstractmethod
    def ImportData(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.ImportDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Import data to the specified Hive Metastore Cluster."""

    @abc.abstractmethod
    def ExportData(
        self,
        request: yandex.cloud.metastore.v1.cluster_service_pb2.ExportDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Export data from the specified Hive Metastore Cluster."""

def add_ClusterServiceServicer_to_server(servicer: ClusterServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.iot.devices.v1.registry_data_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RegistryDataServiceStub:
    """A set of methods to work with IoT Core messages on behalf of registry"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Publish: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataRequest,
        yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataResponse,
    ]
    """Publishes message on behalf of specified registry"""

class RegistryDataServiceAsyncStub:
    """A set of methods to work with IoT Core messages on behalf of registry"""

    Publish: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataRequest,
        yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataResponse,
    ]
    """Publishes message on behalf of specified registry"""

class RegistryDataServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods to work with IoT Core messages on behalf of registry"""

    @abc.abstractmethod
    def Publish(
        self,
        request: yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_data_service_pb2.PublishRegistryDataResponse]]:
        """Publishes message on behalf of specified registry"""

def add_RegistryDataServiceServicer_to_server(servicer: RegistryDataServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

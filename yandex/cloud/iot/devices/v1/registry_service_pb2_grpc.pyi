"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.iot.devices.v1.registry_pb2
import yandex.cloud.iot.devices.v1.registry_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RegistryServiceStub:
    """A set of methods for managing registry."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.GetRegistryRequest,
        yandex.cloud.iot.devices.v1.registry_pb2.Registry,
    ]
    """Returns the specified registry.

    To get the list of available registries, make a [List] request.
    """

    GetByName: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.GetByNameRegistryRequest,
        yandex.cloud.iot.devices.v1.registry_pb2.Registry,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesResponse,
    ]
    """Retrieves the list of registries in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.CreateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a registry in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.UpdateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified registry."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified registry."""

    ListCertificates: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesResponse,
    ]
    """Retrieves the list of registry certificates for the specified registry."""

    AddCertificate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.AddRegistryCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds a certificate."""

    DeleteCertificate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified registry certificate."""

    ListPasswords: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsResponse,
    ]
    """Retrieves the list of passwords for the specified registry."""

    AddPassword: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.AddRegistryPasswordRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds password for the specified registry."""

    DeletePassword: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryPasswordRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified password."""

    ListDeviceTopicAliases: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesResponse,
    ]
    """Retrieves the list of device topic aliases for the specified registry."""

    ListDataStreamExports: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsResponse,
    ]
    """Retrieves the list of YDS exports for the specified registry."""

    AddDataStreamExport: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.AddDataStreamExportRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds YDS export for the specified registry."""

    DeleteDataStreamExport: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteDataStreamExportRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified YDS export."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsResponse,
    ]
    """Lists operations for the specified registry."""

class RegistryServiceAsyncStub:
    """A set of methods for managing registry."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.GetRegistryRequest,
        yandex.cloud.iot.devices.v1.registry_pb2.Registry,
    ]
    """Returns the specified registry.

    To get the list of available registries, make a [List] request.
    """

    GetByName: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.GetByNameRegistryRequest,
        yandex.cloud.iot.devices.v1.registry_pb2.Registry,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesResponse,
    ]
    """Retrieves the list of registries in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.CreateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a registry in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.UpdateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified registry."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified registry."""

    ListCertificates: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesResponse,
    ]
    """Retrieves the list of registry certificates for the specified registry."""

    AddCertificate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.AddRegistryCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds a certificate."""

    DeleteCertificate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryCertificateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified registry certificate."""

    ListPasswords: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsResponse,
    ]
    """Retrieves the list of passwords for the specified registry."""

    AddPassword: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.AddRegistryPasswordRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds password for the specified registry."""

    DeletePassword: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryPasswordRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified password."""

    ListDeviceTopicAliases: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesResponse,
    ]
    """Retrieves the list of device topic aliases for the specified registry."""

    ListDataStreamExports: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsResponse,
    ]
    """Retrieves the list of YDS exports for the specified registry."""

    AddDataStreamExport: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.AddDataStreamExportRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds YDS export for the specified registry."""

    DeleteDataStreamExport: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteDataStreamExportRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified YDS export."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsRequest,
        yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsResponse,
    ]
    """Lists operations for the specified registry."""

class RegistryServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing registry."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.GetRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_pb2.Registry, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_pb2.Registry]]:
        """Returns the specified registry.

        To get the list of available registries, make a [List] request.
        """

    @abc.abstractmethod
    def GetByName(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.GetByNameRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_pb2.Registry, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_pb2.Registry]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistriesResponse]]:
        """Retrieves the list of registries in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.CreateRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a registry in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.UpdateRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified registry."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified registry."""

    @abc.abstractmethod
    def ListCertificates(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryCertificatesResponse]]:
        """Retrieves the list of registry certificates for the specified registry."""

    @abc.abstractmethod
    def AddCertificate(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.AddRegistryCertificateRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Adds a certificate."""

    @abc.abstractmethod
    def DeleteCertificate(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryCertificateRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified registry certificate."""

    @abc.abstractmethod
    def ListPasswords(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryPasswordsResponse]]:
        """Retrieves the list of passwords for the specified registry."""

    @abc.abstractmethod
    def AddPassword(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.AddRegistryPasswordRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Adds password for the specified registry."""

    @abc.abstractmethod
    def DeletePassword(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteRegistryPasswordRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified password."""

    @abc.abstractmethod
    def ListDeviceTopicAliases(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_service_pb2.ListDeviceTopicAliasesResponse]]:
        """Retrieves the list of device topic aliases for the specified registry."""

    @abc.abstractmethod
    def ListDataStreamExports(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_service_pb2.ListDataStreamExportsResponse]]:
        """Retrieves the list of YDS exports for the specified registry."""

    @abc.abstractmethod
    def AddDataStreamExport(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.AddDataStreamExportRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Adds YDS export for the specified registry."""

    @abc.abstractmethod
    def DeleteDataStreamExport(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.DeleteDataStreamExportRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified YDS export."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsResponse, collections.abc.Awaitable[yandex.cloud.iot.devices.v1.registry_service_pb2.ListRegistryOperationsResponse]]:
        """Lists operations for the specified registry."""

def add_RegistryServiceServicer_to_server(servicer: RegistryServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import yandex.cloud.loadtesting.api.v1.config.config_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class CreateConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOLDER_ID_FIELD_NUMBER: builtins.int
    YAML_STRING_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    folder_id: builtins.str
    """ID of the folder to create a config in."""
    yaml_string: builtins.str
    """Config content provided as a string in YAML format."""
    name: builtins.str
    """Name of the config."""
    def __init__(
        self,
        *,
        folder_id: builtins.str = ...,
        yaml_string: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config", "yaml_string", b"yaml_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["config", b"config", "folder_id", b"folder_id", "name", b"name", "yaml_string", b"yaml_string"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["config", b"config"]) -> typing.Literal["yaml_string"] | None: ...

global___CreateConfigRequest = CreateConfigRequest

@typing.final
class CreateConfigMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_ID_FIELD_NUMBER: builtins.int
    config_id: builtins.str
    """ID of the config that is being created."""
    def __init__(
        self,
        *,
        config_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["config_id", b"config_id"]) -> None: ...

global___CreateConfigMetadata = CreateConfigMetadata

@typing.final
class GetConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_ID_FIELD_NUMBER: builtins.int
    config_id: builtins.str
    """ID of the config to return."""
    def __init__(
        self,
        *,
        config_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["config_id", b"config_id"]) -> None: ...

global___GetConfigRequest = GetConfigRequest

@typing.final
class ListConfigsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOLDER_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    folder_id: builtins.str
    """ID of the folder to list configs in."""
    page_size: builtins.int
    """The maximum number of results per page to return. If the number of available
    results is larger than `page_size`, the service returns a [ListConfigsResponse.next_page_token]
    that can be used to get the next page of results in subsequent list requests.
    Default value: 100.
    """
    page_token: builtins.str
    """Page token. To get the next page of results, set `page_token` to the 
    [ListConfigsResponse.next_page_token] returned by a previous list request.
    """
    filter: builtins.str
    """A filter expression that filters tests listed in the response."""
    def __init__(
        self,
        *,
        folder_id: builtins.str = ...,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "folder_id", b"folder_id", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListConfigsRequest = ListConfigsRequest

@typing.final
class ListConfigsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """Token for getting the next page of the list. If the number of results is greater than
    the specified [ListConfigsRequest.page_size], use `next_page_token` as the value
    for the [ListConfigsRequest.page_token] parameter in the next list request.

    Each subsequent page will have its own `next_page_token` to continue paging through the results.
    """
    @property
    def configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.loadtesting.api.v1.config.config_pb2.Config]:
        """List of configs in the specified folder."""

    def __init__(
        self,
        *,
        configs: collections.abc.Iterable[yandex.cloud.loadtesting.api.v1.config.config_pb2.Config] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["configs", b"configs", "next_page_token", b"next_page_token"]) -> None: ...

global___ListConfigsResponse = ListConfigsResponse

@typing.final
class DeleteConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_ID_FIELD_NUMBER: builtins.int
    config_id: builtins.str
    """ID of the config to deleted."""
    def __init__(
        self,
        *,
        config_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["config_id", b"config_id"]) -> None: ...

global___DeleteConfigRequest = DeleteConfigRequest

@typing.final
class DeleteConfigMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_ID_FIELD_NUMBER: builtins.int
    config_id: builtins.str
    """ID of the config that is being deleted."""
    def __init__(
        self,
        *,
        config_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["config_id", b"config_id"]) -> None: ...

global___DeleteConfigMetadata = DeleteConfigMetadata

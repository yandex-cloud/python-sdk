"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.loadtesting.agent.v1.job_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class JobServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ClaimStatus: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusRequest,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusResponse,
    ]
    """Claims status for the specified job."""

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.GetJobRequest,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.Job,
    ]
    """Returns the job for the specified agent."""

    GetSignal: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalRequest,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalResponse,
    ]
    """Returns the signal for the specified job."""

    GetTransientFile: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.GetJobTransientFile,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.File,
    ]

class JobServiceAsyncStub:
    ClaimStatus: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusRequest,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusResponse,
    ]
    """Claims status for the specified job."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.GetJobRequest,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.Job,
    ]
    """Returns the job for the specified agent."""

    GetSignal: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalRequest,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalResponse,
    ]
    """Returns the signal for the specified job."""

    GetTransientFile: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.GetJobTransientFile,
        yandex.cloud.loadtesting.agent.v1.job_service_pb2.File,
    ]

class JobServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ClaimStatus(
        self,
        request: yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusResponse, collections.abc.Awaitable[yandex.cloud.loadtesting.agent.v1.job_service_pb2.ClaimJobStatusResponse]]:
        """Claims status for the specified job."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.loadtesting.agent.v1.job_service_pb2.GetJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.loadtesting.agent.v1.job_service_pb2.Job, collections.abc.Awaitable[yandex.cloud.loadtesting.agent.v1.job_service_pb2.Job]]:
        """Returns the job for the specified agent."""

    @abc.abstractmethod
    def GetSignal(
        self,
        request: yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalResponse, collections.abc.Awaitable[yandex.cloud.loadtesting.agent.v1.job_service_pb2.JobSignalResponse]]:
        """Returns the signal for the specified job."""

    @abc.abstractmethod
    def GetTransientFile(
        self,
        request: yandex.cloud.loadtesting.agent.v1.job_service_pb2.GetJobTransientFile,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.loadtesting.agent.v1.job_service_pb2.File, collections.abc.Awaitable[yandex.cloud.loadtesting.agent.v1.job_service_pb2.File]]: ...

def add_JobServiceServicer_to_server(servicer: JobServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

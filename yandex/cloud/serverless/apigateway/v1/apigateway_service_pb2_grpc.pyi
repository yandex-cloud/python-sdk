"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.access.access_pb2
import yandex.cloud.operation.operation_pb2
import yandex.cloud.serverless.apigateway.v1.apigateway_pb2
import yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ApiGatewayServiceStub:
    """A set of methods for managing API gateways."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetApiGatewayRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_pb2.ApiGateway,
    ]
    """Returns the specified API gateway. Note that only API gateway basic attributes are returned.
    To get associated openapi specification, make a [GetOpenapiSpec](#GetOpenapiSpec) request.

    To get the list of all available API gateways, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayResponse,
    ]
    """Retrieves the list of API gateways in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.CreateApiGatewayRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an API gateway in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.UpdateApiGatewayRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified API gateway."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.DeleteApiGatewayRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified API gateway."""

    AddDomain: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.AddDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Attaches domain to the specified API gateway."""

    RemoveDomain: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.RemoveDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Detaches domain from the specified API gateway."""

    GetOpenapiSpec: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecResponse,
    ]
    """Returns the OpenAPI specification of specified API gateway."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsResponse,
    ]
    """Lists operations for the specified API gateway."""

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists existing access bindings for the specified API gateway."""

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified API gateway."""

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified API gateway."""

class ApiGatewayServiceAsyncStub:
    """A set of methods for managing API gateways."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetApiGatewayRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_pb2.ApiGateway,
    ]
    """Returns the specified API gateway. Note that only API gateway basic attributes are returned.
    To get associated openapi specification, make a [GetOpenapiSpec](#GetOpenapiSpec) request.

    To get the list of all available API gateways, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayResponse,
    ]
    """Retrieves the list of API gateways in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.CreateApiGatewayRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an API gateway in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.UpdateApiGatewayRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified API gateway."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.DeleteApiGatewayRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified API gateway."""

    AddDomain: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.AddDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Attaches domain to the specified API gateway."""

    RemoveDomain: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.RemoveDomainRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Detaches domain from the specified API gateway."""

    GetOpenapiSpec: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecResponse,
    ]
    """Returns the OpenAPI specification of specified API gateway."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsRequest,
        yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsResponse,
    ]
    """Lists operations for the specified API gateway."""

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists existing access bindings for the specified API gateway."""

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified API gateway."""

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified API gateway."""

class ApiGatewayServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing API gateways."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetApiGatewayRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.serverless.apigateway.v1.apigateway_pb2.ApiGateway, collections.abc.Awaitable[yandex.cloud.serverless.apigateway.v1.apigateway_pb2.ApiGateway]]:
        """Returns the specified API gateway. Note that only API gateway basic attributes are returned.
        To get associated openapi specification, make a [GetOpenapiSpec](#GetOpenapiSpec) request.

        To get the list of all available API gateways, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayResponse, collections.abc.Awaitable[yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListApiGatewayResponse]]:
        """Retrieves the list of API gateways in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.CreateApiGatewayRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates an API gateway in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.UpdateApiGatewayRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified API gateway."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.DeleteApiGatewayRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified API gateway."""

    @abc.abstractmethod
    def AddDomain(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.AddDomainRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Attaches domain to the specified API gateway."""

    @abc.abstractmethod
    def RemoveDomain(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.RemoveDomainRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Detaches domain from the specified API gateway."""

    @abc.abstractmethod
    def GetOpenapiSpec(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecResponse, collections.abc.Awaitable[yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.GetOpenapiSpecResponse]]:
        """Returns the OpenAPI specification of specified API gateway."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsResponse, collections.abc.Awaitable[yandex.cloud.serverless.apigateway.v1.apigateway_service_pb2.ListOperationsResponse]]:
        """Lists operations for the specified API gateway."""

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.access.access_pb2.ListAccessBindingsResponse]]:
        """Lists existing access bindings for the specified API gateway."""

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sets access bindings for the specified API gateway."""

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates access bindings for the specified API gateway."""

def add_ApiGatewayServiceServicer_to_server(servicer: ApiGatewayServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

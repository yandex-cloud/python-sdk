"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.compute.v1.host_type_pb2
import yandex.cloud.compute.v1.host_type_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class HostTypeServiceStub:
    """Set of methods to view possible host configurations."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.host_type_service_pb2.GetHostTypeRequest,
        yandex.cloud.compute.v1.host_type_pb2.HostType,
    ]
    """Returns information about specified host type."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesRequest,
        yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesResponse,
    ]
    """List avaliable host types."""

class HostTypeServiceAsyncStub:
    """Set of methods to view possible host configurations."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.host_type_service_pb2.GetHostTypeRequest,
        yandex.cloud.compute.v1.host_type_pb2.HostType,
    ]
    """Returns information about specified host type."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesRequest,
        yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesResponse,
    ]
    """List avaliable host types."""

class HostTypeServiceServicer(metaclass=abc.ABCMeta):
    """Set of methods to view possible host configurations."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.compute.v1.host_type_service_pb2.GetHostTypeRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.host_type_pb2.HostType, collections.abc.Awaitable[yandex.cloud.compute.v1.host_type_pb2.HostType]]:
        """Returns information about specified host type."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.host_type_service_pb2.ListHostTypesResponse]]:
        """List avaliable host types."""

def add_HostTypeServiceServicer_to_server(servicer: HostTypeServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

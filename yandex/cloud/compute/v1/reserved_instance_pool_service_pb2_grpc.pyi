"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.compute.v1.reserved_instance_pool_pb2
import yandex.cloud.compute.v1.reserved_instance_pool_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ReservedInstancePoolServiceStub:
    """A set of methods for managing reserved instance pool resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.GetReservedInstancePoolRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_pb2.ReservedInstancePool,
    ]
    """Returns the specified reserved instance pool resource.

    To get the list of available reserved instance pool resources, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsResponse,
    ]
    """Retrieves the list of reserved instance pool resources in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.CreateReservedInstancePoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an reserved instance pool in the specified folder.
    Method starts an asynchronous operation that can be cancelled while it is in progress.
    """

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.UpdateReservedInstancePoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified reserved instance pool."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.DeleteReservedInstancePoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified reserved instance pool."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsResponse,
    ]
    """Lists operations for the specified reserved instance pool."""

    ListInstances: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesResponse,
    ]
    """Retrieves the list of instances, using the specified reserved instance pool."""

class ReservedInstancePoolServiceAsyncStub:
    """A set of methods for managing reserved instance pool resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.GetReservedInstancePoolRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_pb2.ReservedInstancePool,
    ]
    """Returns the specified reserved instance pool resource.

    To get the list of available reserved instance pool resources, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsResponse,
    ]
    """Retrieves the list of reserved instance pool resources in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.CreateReservedInstancePoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an reserved instance pool in the specified folder.
    Method starts an asynchronous operation that can be cancelled while it is in progress.
    """

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.UpdateReservedInstancePoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified reserved instance pool."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.DeleteReservedInstancePoolRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified reserved instance pool."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsResponse,
    ]
    """Lists operations for the specified reserved instance pool."""

    ListInstances: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesRequest,
        yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesResponse,
    ]
    """Retrieves the list of instances, using the specified reserved instance pool."""

class ReservedInstancePoolServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing reserved instance pool resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.GetReservedInstancePoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.reserved_instance_pool_pb2.ReservedInstancePool, collections.abc.Awaitable[yandex.cloud.compute.v1.reserved_instance_pool_pb2.ReservedInstancePool]]:
        """Returns the specified reserved instance pool resource.

        To get the list of available reserved instance pool resources, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolsResponse]]:
        """Retrieves the list of reserved instance pool resources in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.CreateReservedInstancePoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates an reserved instance pool in the specified folder.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
        """

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.UpdateReservedInstancePoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified reserved instance pool."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.DeleteReservedInstancePoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified reserved instance pool."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolOperationsResponse]]:
        """Lists operations for the specified reserved instance pool."""

    @abc.abstractmethod
    def ListInstances(
        self,
        request: yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.reserved_instance_pool_service_pb2.ListReservedInstancePoolInstancesResponse]]:
        """Retrieves the list of instances, using the specified reserved instance pool."""

def add_ReservedInstancePoolServiceServicer_to_server(servicer: ReservedInstancePoolServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

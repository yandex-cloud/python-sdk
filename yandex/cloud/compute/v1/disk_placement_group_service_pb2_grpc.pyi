"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.access.access_pb2
import yandex.cloud.compute.v1.disk_placement_group_pb2
import yandex.cloud.compute.v1.disk_placement_group_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class DiskPlacementGroupServiceStub:
    """A set of methods for managing DiskPlacementGroup resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.GetDiskPlacementGroupRequest,
        yandex.cloud.compute.v1.disk_placement_group_pb2.DiskPlacementGroup,
    ]
    """Returns the specified placement group."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsResponse,
    ]
    """Retrieves the list of placement groups in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.CreateDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a placement group in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.UpdateDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified placement group."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.DeleteDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified placement group."""

    ListDisks: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksResponse,
    ]
    """Lists disks for the specified placement group."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsResponse,
    ]
    """Lists operations for the specified placement group."""

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """access

    Lists access bindings for the disk placement group.
    """

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the disk placement group."""

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the disk placement group."""

class DiskPlacementGroupServiceAsyncStub:
    """A set of methods for managing DiskPlacementGroup resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.GetDiskPlacementGroupRequest,
        yandex.cloud.compute.v1.disk_placement_group_pb2.DiskPlacementGroup,
    ]
    """Returns the specified placement group."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsResponse,
    ]
    """Retrieves the list of placement groups in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.CreateDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a placement group in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.UpdateDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified placement group."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.DeleteDiskPlacementGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified placement group."""

    ListDisks: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksResponse,
    ]
    """Lists disks for the specified placement group."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsRequest,
        yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsResponse,
    ]
    """Lists operations for the specified placement group."""

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """access

    Lists access bindings for the disk placement group.
    """

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the disk placement group."""

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the disk placement group."""

class DiskPlacementGroupServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing DiskPlacementGroup resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.GetDiskPlacementGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.disk_placement_group_pb2.DiskPlacementGroup, collections.abc.Awaitable[yandex.cloud.compute.v1.disk_placement_group_pb2.DiskPlacementGroup]]:
        """Returns the specified placement group."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupsResponse]]:
        """Retrieves the list of placement groups in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.CreateDiskPlacementGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a placement group in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.UpdateDiskPlacementGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified placement group."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.DeleteDiskPlacementGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified placement group."""

    @abc.abstractmethod
    def ListDisks(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupDisksResponse]]:
        """Lists disks for the specified placement group."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsResponse, collections.abc.Awaitable[yandex.cloud.compute.v1.disk_placement_group_service_pb2.ListDiskPlacementGroupOperationsResponse]]:
        """Lists operations for the specified placement group."""

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.access.access_pb2.ListAccessBindingsResponse]]:
        """access

        Lists access bindings for the disk placement group.
        """

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sets access bindings for the disk placement group."""

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates access bindings for the disk placement group."""

def add_DiskPlacementGroupServiceServicer_to_server(servicer: DiskPlacementGroupServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

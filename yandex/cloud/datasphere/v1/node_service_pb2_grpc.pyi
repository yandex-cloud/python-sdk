"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.datasphere.v1.node_service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class NodeServiceStub:
    """A set of methods for managing Node resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Execute: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionRequest,
        yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionResponse,
    ]
    """Executes deployed Node."""

    ExecuteAlias: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionRequest,
        yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionResponse,
    ]
    """Executes NodeAlias requests."""

class NodeServiceAsyncStub:
    """A set of methods for managing Node resources."""

    Execute: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionRequest,
        yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionResponse,
    ]
    """Executes deployed Node."""

    ExecuteAlias: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionRequest,
        yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionResponse,
    ]
    """Executes NodeAlias requests."""

class NodeServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Node resources."""

    @abc.abstractmethod
    def Execute(
        self,
        request: yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionResponse, collections.abc.Awaitable[yandex.cloud.datasphere.v1.node_service_pb2.NodeExecutionResponse]]:
        """Executes deployed Node."""

    @abc.abstractmethod
    def ExecuteAlias(
        self,
        request: yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionResponse, collections.abc.Awaitable[yandex.cloud.datasphere.v1.node_service_pb2.AliasExecutionResponse]]:
        """Executes NodeAlias requests."""

def add_NodeServiceServicer_to_server(servicer: NodeServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing
import yandex.cloud.access.access_pb2
import yandex.cloud.datasphere.v2.community_pb2
import yandex.cloud.datasphere.v2.community_service_pb2
import yandex.cloud.datasphere.v2.restrictions_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class CommunityServiceStub:
    """A set of methods for managing Community resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.CreateCommunityRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates community in specified organization."""

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.GetCommunityRequest,
        yandex.cloud.datasphere.v2.community_pb2.Community,
    ]
    """Returns community."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.UpdateCommunityRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates specified community."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.DeleteCommunityRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes specified community."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesRequest,
        yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesResponse,
    ]
    """List communities in specified organization."""

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists access bindings for specified community."""

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for specified community."""

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for specified community."""

    AddResource: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.AddCommunityResourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds shared resource to community"""

    RemoveResource: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.RemoveCommunityResourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Removes shared resource from community"""

    GetRestrictionsMeta: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.datasphere.v2.restrictions_pb2.GetRestrictionsMetaResponse,
    ]
    """Get meta information about available restrictions."""

    GetRestrictions: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.GetCommunityRestrictionsRequest,
        yandex.cloud.datasphere.v2.restrictions_pb2.RestrictionsResponse,
    ]
    """Get current community restrictions."""

    SetRestrictions: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.SetCommunityRestrictionsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Set community restrictions."""

class CommunityServiceAsyncStub:
    """A set of methods for managing Community resources."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.CreateCommunityRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates community in specified organization."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.GetCommunityRequest,
        yandex.cloud.datasphere.v2.community_pb2.Community,
    ]
    """Returns community."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.UpdateCommunityRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates specified community."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.DeleteCommunityRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes specified community."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesRequest,
        yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesResponse,
    ]
    """List communities in specified organization."""

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Lists access bindings for specified community."""

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for specified community."""

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for specified community."""

    AddResource: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.AddCommunityResourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Adds shared resource to community"""

    RemoveResource: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.RemoveCommunityResourceRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Removes shared resource from community"""

    GetRestrictionsMeta: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.datasphere.v2.restrictions_pb2.GetRestrictionsMetaResponse,
    ]
    """Get meta information about available restrictions."""

    GetRestrictions: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.GetCommunityRestrictionsRequest,
        yandex.cloud.datasphere.v2.restrictions_pb2.RestrictionsResponse,
    ]
    """Get current community restrictions."""

    SetRestrictions: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.datasphere.v2.community_service_pb2.SetCommunityRestrictionsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Set community restrictions."""

class CommunityServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Community resources."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.CreateCommunityRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates community in specified organization."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.GetCommunityRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datasphere.v2.community_pb2.Community, collections.abc.Awaitable[yandex.cloud.datasphere.v2.community_pb2.Community]]:
        """Returns community."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.UpdateCommunityRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates specified community."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.DeleteCommunityRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes specified community."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesResponse, collections.abc.Awaitable[yandex.cloud.datasphere.v2.community_service_pb2.ListCommunitiesResponse]]:
        """List communities in specified organization."""

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.access.access_pb2.ListAccessBindingsResponse]]:
        """Lists access bindings for specified community."""

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sets access bindings for specified community."""

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates access bindings for specified community."""

    @abc.abstractmethod
    def AddResource(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.AddCommunityResourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Adds shared resource to community"""

    @abc.abstractmethod
    def RemoveResource(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.RemoveCommunityResourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Removes shared resource from community"""

    @abc.abstractmethod
    def GetRestrictionsMeta(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datasphere.v2.restrictions_pb2.GetRestrictionsMetaResponse, collections.abc.Awaitable[yandex.cloud.datasphere.v2.restrictions_pb2.GetRestrictionsMetaResponse]]:
        """Get meta information about available restrictions."""

    @abc.abstractmethod
    def GetRestrictions(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.GetCommunityRestrictionsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.datasphere.v2.restrictions_pb2.RestrictionsResponse, collections.abc.Awaitable[yandex.cloud.datasphere.v2.restrictions_pb2.RestrictionsResponse]]:
        """Get current community restrictions."""

    @abc.abstractmethod
    def SetRestrictions(
        self,
        request: yandex.cloud.datasphere.v2.community_service_pb2.SetCommunityRestrictionsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Set community restrictions."""

def add_CommunityServiceServicer_to_server(servicer: CommunityServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.billing.v1.budget_pb2
import yandex.cloud.billing.v1.budget_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class BudgetServiceStub:
    """A set of methods for managing Budget resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.billing.v1.budget_service_pb2.GetBudgetRequest,
        yandex.cloud.billing.v1.budget_pb2.Budget,
    ]
    """Returns the specified budget."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsRequest,
        yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsResponse,
    ]
    """Retrieves the list of budgets corresponding to the specified billing account."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.billing.v1.budget_service_pb2.CreateBudgetRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a budget for the specified billing account."""

class BudgetServiceAsyncStub:
    """A set of methods for managing Budget resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.billing.v1.budget_service_pb2.GetBudgetRequest,
        yandex.cloud.billing.v1.budget_pb2.Budget,
    ]
    """Returns the specified budget."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsRequest,
        yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsResponse,
    ]
    """Retrieves the list of budgets corresponding to the specified billing account."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.billing.v1.budget_service_pb2.CreateBudgetRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a budget for the specified billing account."""

class BudgetServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Budget resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.billing.v1.budget_service_pb2.GetBudgetRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.billing.v1.budget_pb2.Budget, collections.abc.Awaitable[yandex.cloud.billing.v1.budget_pb2.Budget]]:
        """Returns the specified budget."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsResponse, collections.abc.Awaitable[yandex.cloud.billing.v1.budget_service_pb2.ListBudgetsResponse]]:
        """Retrieves the list of budgets corresponding to the specified billing account."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.billing.v1.budget_service_pb2.CreateBudgetRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a budget for the specified billing account."""

def add_BudgetServiceServicer_to_server(servicer: BudgetServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

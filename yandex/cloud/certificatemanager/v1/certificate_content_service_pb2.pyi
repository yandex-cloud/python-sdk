"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PrivateKeyFormat:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PrivateKeyFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivateKeyFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PRIVATE_KEY_FORMAT_UNSPECIFIED: _PrivateKeyFormat.ValueType  # 0
    PKCS1: _PrivateKeyFormat.ValueType  # 1
    PKCS8: _PrivateKeyFormat.ValueType  # 2

class PrivateKeyFormat(_PrivateKeyFormat, metaclass=_PrivateKeyFormatEnumTypeWrapper): ...

PRIVATE_KEY_FORMAT_UNSPECIFIED: PrivateKeyFormat.ValueType  # 0
PKCS1: PrivateKeyFormat.ValueType  # 1
PKCS8: PrivateKeyFormat.ValueType  # 2
global___PrivateKeyFormat = PrivateKeyFormat

@typing.final
class GetCertificateContentResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_ID_FIELD_NUMBER: builtins.int
    CERTIFICATE_CHAIN_FIELD_NUMBER: builtins.int
    PRIVATE_KEY_FIELD_NUMBER: builtins.int
    certificate_id: builtins.str
    """ID of the certificate."""
    private_key: builtins.str
    """PEM-encoded private key content of the certificate."""
    @property
    def certificate_chain(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """PEM-encoded certificate chain content of the certificate."""

    def __init__(
        self,
        *,
        certificate_id: builtins.str = ...,
        certificate_chain: collections.abc.Iterable[builtins.str] | None = ...,
        private_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["certificate_chain", b"certificate_chain", "certificate_id", b"certificate_id", "private_key", b"private_key"]) -> None: ...

global___GetCertificateContentResponse = GetCertificateContentResponse

@typing.final
class GetCertificateContentRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    PRIVATE_KEY_FORMAT_FIELD_NUMBER: builtins.int
    certificate_id: builtins.str
    """ID of the certificate to download content."""
    version_id: builtins.str
    """Optional ID of the version."""
    private_key_format: global___PrivateKeyFormat.ValueType
    """Desired format of private key"""
    def __init__(
        self,
        *,
        certificate_id: builtins.str = ...,
        version_id: builtins.str = ...,
        private_key_format: global___PrivateKeyFormat.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["certificate_id", b"certificate_id", "private_key_format", b"private_key_format", "version_id", b"version_id"]) -> None: ...

global___GetCertificateContentRequest = GetCertificateContentRequest

@typing.final
class GetExCertificateContentRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_ID_FIELD_NUMBER: builtins.int
    FOLDER_AND_NAME_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    PRIVATE_KEY_FORMAT_FIELD_NUMBER: builtins.int
    certificate_id: builtins.str
    version_id: builtins.str
    private_key_format: global___PrivateKeyFormat.ValueType
    @property
    def folder_and_name(self) -> global___FolderAndName: ...
    def __init__(
        self,
        *,
        certificate_id: builtins.str = ...,
        folder_and_name: global___FolderAndName | None = ...,
        version_id: builtins.str = ...,
        private_key_format: global___PrivateKeyFormat.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["certificate_id", b"certificate_id", "folder_and_name", b"folder_and_name", "identifier", b"identifier"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["certificate_id", b"certificate_id", "folder_and_name", b"folder_and_name", "identifier", b"identifier", "private_key_format", b"private_key_format", "version_id", b"version_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["identifier", b"identifier"]) -> typing.Literal["certificate_id", "folder_and_name"] | None: ...

global___GetExCertificateContentRequest = GetExCertificateContentRequest

@typing.final
class GetExCertificateContentResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CERTIFICATE_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    CERTIFICATE_CHAIN_FIELD_NUMBER: builtins.int
    PRIVATE_KEY_FIELD_NUMBER: builtins.int
    certificate_id: builtins.str
    version_id: builtins.str
    private_key: builtins.str
    @property
    def certificate_chain(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        certificate_id: builtins.str = ...,
        version_id: builtins.str = ...,
        certificate_chain: collections.abc.Iterable[builtins.str] | None = ...,
        private_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["certificate_chain", b"certificate_chain", "certificate_id", b"certificate_id", "private_key", b"private_key", "version_id", b"version_id"]) -> None: ...

global___GetExCertificateContentResponse = GetExCertificateContentResponse

@typing.final
class FolderAndName(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOLDER_ID_FIELD_NUMBER: builtins.int
    CERTIFICATE_NAME_FIELD_NUMBER: builtins.int
    folder_id: builtins.str
    certificate_name: builtins.str
    def __init__(
        self,
        *,
        folder_id: builtins.str = ...,
        certificate_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["certificate_name", b"certificate_name", "folder_id", b"folder_id"]) -> None: ...

global___FolderAndName = FolderAndName

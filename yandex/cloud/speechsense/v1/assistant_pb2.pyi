"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AssistantFieldType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssistantFieldTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssistantFieldType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSISTANT_FIELD_TYPE_UNSPECIFIED: _AssistantFieldType.ValueType  # 0
    ASSISTANT_FIELD_TYPE_STRING: _AssistantFieldType.ValueType  # 1
    ASSISTANT_FIELD_TYPE_NUMBER: _AssistantFieldType.ValueType  # 2
    ASSISTANT_FIELD_TYPE_DECIMAL: _AssistantFieldType.ValueType  # 3
    """Floating-point number"""

class AssistantFieldType(_AssistantFieldType, metaclass=_AssistantFieldTypeEnumTypeWrapper): ...

ASSISTANT_FIELD_TYPE_UNSPECIFIED: AssistantFieldType.ValueType  # 0
ASSISTANT_FIELD_TYPE_STRING: AssistantFieldType.ValueType  # 1
ASSISTANT_FIELD_TYPE_NUMBER: AssistantFieldType.ValueType  # 2
ASSISTANT_FIELD_TYPE_DECIMAL: AssistantFieldType.ValueType  # 3
"""Floating-point number"""
global___AssistantFieldType = AssistantFieldType

@typing.final
class Assistant(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PROMPT_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    MODIFIED_AT_FIELD_NUMBER: builtins.int
    MODIFIED_BY_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Assistant id"""
    project_id: builtins.str
    """Project id"""
    model_id: builtins.str
    """Model id"""
    name: builtins.str
    """Assistant name"""
    description: builtins.str
    """Assistant description"""
    prompt: builtins.str
    """Prompt"""
    enabled: builtins.bool
    created_by: builtins.str
    """Subject id"""
    modified_by: builtins.str
    """Subject id"""
    @property
    def fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssistantField]:
        """Fields that will be set after assistant processing"""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Billing labels"""

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        project_id: builtins.str = ...,
        model_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        prompt: builtins.str = ...,
        fields: collections.abc.Iterable[global___AssistantField] | None = ...,
        enabled: builtins.bool = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by: builtins.str = ...,
        modified_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_by: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "modified_at", b"modified_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["created_at", b"created_at", "created_by", b"created_by", "description", b"description", "enabled", b"enabled", "fields", b"fields", "id", b"id", "labels", b"labels", "model_id", b"model_id", "modified_at", b"modified_at", "modified_by", b"modified_by", "name", b"name", "project_id", b"project_id", "prompt", b"prompt"]) -> None: ...

global___Assistant = Assistant

@typing.final
class AssistantField(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Field id"""
    name: builtins.str
    """Field name"""
    description: builtins.str
    """Field description"""
    type: global___AssistantFieldType.ValueType
    """Field type"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        type: global___AssistantFieldType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "id", b"id", "name", b"name", "type", b"type"]) -> None: ...

global___AssistantField = AssistantField

@typing.final
class Model(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Model id"""
    name: builtins.str
    """Model name"""
    description: builtins.str
    """Model description"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "id", b"id", "name", b"name"]) -> None: ...

global___Model = Model

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.baremetal.v1alpha.private_cloud_connection_pb2
import yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class PrivateCloudConnectionServiceStub:
    """A set of methods for managing Private cloud connection resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.GetPrivateCloudConnectionRequest,
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_pb2.PrivateCloudConnection,
    ]
    """Returns the specific Private cloud connection resource.

    To get the list of available Private cloud connection resources, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionRequest,
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionResponse,
    ]
    """Retrieves the list of Private cloud connection resources in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.CreatePrivateCloudConnectionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a private cloud connection in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.UpdatePrivateCloudConnectionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the routing_instance_id in a private cloud connection."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.DeletePrivateCloudConnectionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Removes a private cloud connection and all allocated network resouces"""

class PrivateCloudConnectionServiceAsyncStub:
    """A set of methods for managing Private cloud connection resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.GetPrivateCloudConnectionRequest,
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_pb2.PrivateCloudConnection,
    ]
    """Returns the specific Private cloud connection resource.

    To get the list of available Private cloud connection resources, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionRequest,
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionResponse,
    ]
    """Retrieves the list of Private cloud connection resources in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.CreatePrivateCloudConnectionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a private cloud connection in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.UpdatePrivateCloudConnectionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the routing_instance_id in a private cloud connection."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.DeletePrivateCloudConnectionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Removes a private cloud connection and all allocated network resouces"""

class PrivateCloudConnectionServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Private cloud connection resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.GetPrivateCloudConnectionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.baremetal.v1alpha.private_cloud_connection_pb2.PrivateCloudConnection, collections.abc.Awaitable[yandex.cloud.baremetal.v1alpha.private_cloud_connection_pb2.PrivateCloudConnection]]:
        """Returns the specific Private cloud connection resource.

        To get the list of available Private cloud connection resources, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionResponse, collections.abc.Awaitable[yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.ListPrivateCloudConnectionResponse]]:
        """Retrieves the list of Private cloud connection resources in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.CreatePrivateCloudConnectionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a private cloud connection in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.UpdatePrivateCloudConnectionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the routing_instance_id in a private cloud connection."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.baremetal.v1alpha.private_cloud_connection_service_pb2.DeletePrivateCloudConnectionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Removes a private cloud connection and all allocated network resouces"""

def add_PrivateCloudConnectionServiceServicer_to_server(servicer: PrivateCloudConnectionServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

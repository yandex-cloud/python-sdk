"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.baremetal.v1alpha.server_pb2
import yandex.cloud.baremetal.v1alpha.server_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ServerServiceStub:
    """A set of methods for managing Server resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.GetServerRequest,
        yandex.cloud.baremetal.v1alpha.server_pb2.Server,
    ]
    """Returns the specific Server resource.

    To get the list of available Server resources, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerRequest,
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerResponse,
    ]
    """Retrieves the list of Server resources in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.CreateServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a server in the specified folder."""

    BatchCreate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.BatchCreateServersRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates multiple servers in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.UpdateServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified server."""

    PowerOff: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.PowerOffServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Powers off the specified server."""

    PowerOn: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.PowerOnServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Powers on the specified server."""

    Reboot: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.RebootServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Reboots the specified server."""

    Reinstall: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ReinstallServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Reinstalls the specified server."""

    StartProlongation: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.StartProlongationRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Starts prolongation of the specified server."""

    StopProlongation: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.StopProlongationRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stops prolongation of the specified server."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsRequest,
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsResponse,
    ]
    """Lists operations for the specified server."""

class ServerServiceAsyncStub:
    """A set of methods for managing Server resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.GetServerRequest,
        yandex.cloud.baremetal.v1alpha.server_pb2.Server,
    ]
    """Returns the specific Server resource.

    To get the list of available Server resources, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerRequest,
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerResponse,
    ]
    """Retrieves the list of Server resources in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.CreateServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a server in the specified folder."""

    BatchCreate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.BatchCreateServersRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates multiple servers in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.UpdateServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified server."""

    PowerOff: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.PowerOffServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Powers off the specified server."""

    PowerOn: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.PowerOnServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Powers on the specified server."""

    Reboot: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.RebootServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Reboots the specified server."""

    Reinstall: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ReinstallServerRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Reinstalls the specified server."""

    StartProlongation: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.StartProlongationRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Starts prolongation of the specified server."""

    StopProlongation: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.StopProlongationRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stops prolongation of the specified server."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsRequest,
        yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsResponse,
    ]
    """Lists operations for the specified server."""

class ServerServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Server resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.GetServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.baremetal.v1alpha.server_pb2.Server, collections.abc.Awaitable[yandex.cloud.baremetal.v1alpha.server_pb2.Server]]:
        """Returns the specific Server resource.

        To get the list of available Server resources, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerResponse, collections.abc.Awaitable[yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerResponse]]:
        """Retrieves the list of Server resources in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.CreateServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a server in the specified folder."""

    @abc.abstractmethod
    def BatchCreate(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.BatchCreateServersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates multiple servers in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.UpdateServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified server."""

    @abc.abstractmethod
    def PowerOff(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.PowerOffServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Powers off the specified server."""

    @abc.abstractmethod
    def PowerOn(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.PowerOnServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Powers on the specified server."""

    @abc.abstractmethod
    def Reboot(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.RebootServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Reboots the specified server."""

    @abc.abstractmethod
    def Reinstall(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.ReinstallServerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Reinstalls the specified server."""

    @abc.abstractmethod
    def StartProlongation(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.StartProlongationRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Starts prolongation of the specified server."""

    @abc.abstractmethod
    def StopProlongation(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.StopProlongationRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Stops prolongation of the specified server."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsResponse, collections.abc.Awaitable[yandex.cloud.baremetal.v1alpha.server_service_pb2.ListServerOperationsResponse]]:
        """Lists operations for the specified server."""

def add_ServerServiceServicer_to_server(servicer: ServerServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

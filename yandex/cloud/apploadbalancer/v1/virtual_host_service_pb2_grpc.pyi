"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.apploadbalancer.v1.virtual_host_pb2
import yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class VirtualHostServiceStub:
    """A set of methods for managing virtual hosts of HTTP routers."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.GetVirtualHostRequest,
        yandex.cloud.apploadbalancer.v1.virtual_host_pb2.VirtualHost,
    ]
    """Returns the specified virtual host.

    To get the list of all virtual hosts of an HTTP router, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsRequest,
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsResponse,
    ]
    """Lists virtual hosts of the specified HTTP router."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.CreateVirtualHostRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a virtual host in the specified HTTP router."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.UpdateVirtualHostRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified virtual host of the specified HTTP router."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.DeleteVirtualHostRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified virtual host."""

    RemoveRoute: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.RemoveRouteRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified route from the specified virtual host."""

    UpdateRoute: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.UpdateRouteRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified route of the specified virtual host."""

class VirtualHostServiceAsyncStub:
    """A set of methods for managing virtual hosts of HTTP routers."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.GetVirtualHostRequest,
        yandex.cloud.apploadbalancer.v1.virtual_host_pb2.VirtualHost,
    ]
    """Returns the specified virtual host.

    To get the list of all virtual hosts of an HTTP router, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsRequest,
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsResponse,
    ]
    """Lists virtual hosts of the specified HTTP router."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.CreateVirtualHostRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a virtual host in the specified HTTP router."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.UpdateVirtualHostRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified virtual host of the specified HTTP router."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.DeleteVirtualHostRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified virtual host."""

    RemoveRoute: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.RemoveRouteRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified route from the specified virtual host."""

    UpdateRoute: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.UpdateRouteRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified route of the specified virtual host."""

class VirtualHostServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing virtual hosts of HTTP routers."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.GetVirtualHostRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.apploadbalancer.v1.virtual_host_pb2.VirtualHost, collections.abc.Awaitable[yandex.cloud.apploadbalancer.v1.virtual_host_pb2.VirtualHost]]:
        """Returns the specified virtual host.

        To get the list of all virtual hosts of an HTTP router, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsResponse, collections.abc.Awaitable[yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.ListVirtualHostsResponse]]:
        """Lists virtual hosts of the specified HTTP router."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.CreateVirtualHostRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a virtual host in the specified HTTP router."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.UpdateVirtualHostRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified virtual host of the specified HTTP router."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.DeleteVirtualHostRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified virtual host."""

    @abc.abstractmethod
    def RemoveRoute(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.RemoveRouteRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified route from the specified virtual host."""

    @abc.abstractmethod
    def UpdateRoute(
        self,
        request: yandex.cloud.apploadbalancer.v1.virtual_host_service_pb2.UpdateRouteRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified route of the specified virtual host."""

def add_VirtualHostServiceServicer_to_server(servicer: VirtualHostServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

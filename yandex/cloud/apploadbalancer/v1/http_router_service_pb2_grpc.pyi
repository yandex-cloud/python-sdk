"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.apploadbalancer.v1.http_router_pb2
import yandex.cloud.apploadbalancer.v1.http_router_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class HttpRouterServiceStub:
    """A set of methods for managing HTTP routers."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.GetHttpRouterRequest,
        yandex.cloud.apploadbalancer.v1.http_router_pb2.HttpRouter,
    ]
    """Returns the specified HTTP router.

    To get the list of all available HTTP routers, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersRequest,
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersResponse,
    ]
    """Lists HTTP routers in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.CreateHttpRouterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an HTTP router in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.UpdateHttpRouterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified HTTP router."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.DeleteHttpRouterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified HTTP router."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsRequest,
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsResponse,
    ]
    """Lists operations for the specified HTTP router."""

class HttpRouterServiceAsyncStub:
    """A set of methods for managing HTTP routers."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.GetHttpRouterRequest,
        yandex.cloud.apploadbalancer.v1.http_router_pb2.HttpRouter,
    ]
    """Returns the specified HTTP router.

    To get the list of all available HTTP routers, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersRequest,
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersResponse,
    ]
    """Lists HTTP routers in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.CreateHttpRouterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates an HTTP router in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.UpdateHttpRouterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified HTTP router."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.DeleteHttpRouterRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified HTTP router."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsRequest,
        yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsResponse,
    ]
    """Lists operations for the specified HTTP router."""

class HttpRouterServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing HTTP routers."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.apploadbalancer.v1.http_router_service_pb2.GetHttpRouterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.apploadbalancer.v1.http_router_pb2.HttpRouter, collections.abc.Awaitable[yandex.cloud.apploadbalancer.v1.http_router_pb2.HttpRouter]]:
        """Returns the specified HTTP router.

        To get the list of all available HTTP routers, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersResponse, collections.abc.Awaitable[yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRoutersResponse]]:
        """Lists HTTP routers in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.apploadbalancer.v1.http_router_service_pb2.CreateHttpRouterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates an HTTP router in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.apploadbalancer.v1.http_router_service_pb2.UpdateHttpRouterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified HTTP router."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.apploadbalancer.v1.http_router_service_pb2.DeleteHttpRouterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified HTTP router."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsResponse, collections.abc.Awaitable[yandex.cloud.apploadbalancer.v1.http_router_service_pb2.ListHttpRouterOperationsResponse]]:
        """Lists operations for the specified HTTP router."""

def add_HttpRouterServiceServicer_to_server(servicer: HttpRouterServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.access.access_pb2
import yandex.cloud.containerregistry.v1.registry_pb2
import yandex.cloud.containerregistry.v1.registry_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RegistryServiceStub:
    """A set of methods for managing Registry resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.GetRegistryRequest,
        yandex.cloud.containerregistry.v1.registry_pb2.Registry,
    ]
    """Returns the specified Registry resource.

    To get the list of available Registry resources, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesRequest,
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesResponse,
    ]
    """Retrieves the list of Registry resources in the specified folder."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.CreateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a registry in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.UpdateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified registry."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.DeleteRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified registry."""

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """access

    Lists access bindings for the specified registry.
    """

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified registry."""

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified registry."""

    ListIpPermission: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionRequest,
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionsResponse,
    ]
    """ip permissions

    List ip permissions for the specified registry.
    """

    SetIpPermission: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.SetIpPermissionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Set ip permissions for the specified registry."""

    UpdateIpPermission: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.UpdateIpPermissionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Update ip permissions for the specified registry."""

class RegistryServiceAsyncStub:
    """A set of methods for managing Registry resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.GetRegistryRequest,
        yandex.cloud.containerregistry.v1.registry_pb2.Registry,
    ]
    """Returns the specified Registry resource.

    To get the list of available Registry resources, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesRequest,
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesResponse,
    ]
    """Retrieves the list of Registry resources in the specified folder."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.CreateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates a registry in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.UpdateRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates the specified registry."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.DeleteRegistryRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified registry."""

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """access

    Lists access bindings for the specified registry.
    """

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified registry."""

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings for the specified registry."""

    ListIpPermission: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionRequest,
        yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionsResponse,
    ]
    """ip permissions

    List ip permissions for the specified registry.
    """

    SetIpPermission: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.SetIpPermissionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Set ip permissions for the specified registry."""

    UpdateIpPermission: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.containerregistry.v1.registry_service_pb2.UpdateIpPermissionRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Update ip permissions for the specified registry."""

class RegistryServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Registry resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.GetRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.containerregistry.v1.registry_pb2.Registry, collections.abc.Awaitable[yandex.cloud.containerregistry.v1.registry_pb2.Registry]]:
        """Returns the specified Registry resource.

        To get the list of available Registry resources, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesResponse, collections.abc.Awaitable[yandex.cloud.containerregistry.v1.registry_service_pb2.ListRegistriesResponse]]:
        """Retrieves the list of Registry resources in the specified folder."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.CreateRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates a registry in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.UpdateRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates the specified registry."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.DeleteRegistryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified registry."""

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.access.access_pb2.ListAccessBindingsResponse]]:
        """access

        Lists access bindings for the specified registry.
        """

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sets access bindings for the specified registry."""

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates access bindings for the specified registry."""

    @abc.abstractmethod
    def ListIpPermission(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionsResponse, collections.abc.Awaitable[yandex.cloud.containerregistry.v1.registry_service_pb2.ListIpPermissionsResponse]]:
        """ip permissions

        List ip permissions for the specified registry.
        """

    @abc.abstractmethod
    def SetIpPermission(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.SetIpPermissionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Set ip permissions for the specified registry."""

    @abc.abstractmethod
    def UpdateIpPermission(
        self,
        request: yandex.cloud.containerregistry.v1.registry_service_pb2.UpdateIpPermissionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Update ip permissions for the specified registry."""

def add_RegistryServiceServicer_to_server(servicer: RegistryServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

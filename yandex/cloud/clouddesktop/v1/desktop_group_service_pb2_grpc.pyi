"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.access.access_pb2
import yandex.cloud.clouddesktop.v1.desktop_group_pb2
import yandex.cloud.clouddesktop.v1.desktop_group_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class DesktopGroupServiceStub:
    """A set of methods for managing desktop group resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.GetDesktopGroupRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_pb2.DesktopGroup,
    ]
    """Returns the specified desktop group resource.

    To get the list of available desktop groups, make a [List] request.
    """

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsResponse,
    ]
    """Retrieves the list of desktop group resources."""

    ListDesktops: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsResponse,
    ]
    """Retrieves the list of desktops resources."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsResponse,
    ]
    """Returns list of the operations for the specified desktop group."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.CreateDesktopGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates desktop group in the specified folder."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.UpdateDesktopGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates desktop group properties"""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.DeleteDesktopGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified desktop group."""

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Returns a list of the access bindings for the specified desktop group."""

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified desktop group."""

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings of the specified desktop group."""

class DesktopGroupServiceAsyncStub:
    """A set of methods for managing desktop group resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.GetDesktopGroupRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_pb2.DesktopGroup,
    ]
    """Returns the specified desktop group resource.

    To get the list of available desktop groups, make a [List] request.
    """

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsResponse,
    ]
    """Retrieves the list of desktop group resources."""

    ListDesktops: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsResponse,
    ]
    """Retrieves the list of desktops resources."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsRequest,
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsResponse,
    ]
    """Returns list of the operations for the specified desktop group."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.CreateDesktopGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates desktop group in the specified folder."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.UpdateDesktopGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates desktop group properties"""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.DeleteDesktopGroupRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified desktop group."""

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        yandex.cloud.access.access_pb2.ListAccessBindingsResponse,
    ]
    """Returns a list of the access bindings for the specified desktop group."""

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sets access bindings for the specified desktop group."""

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates access bindings of the specified desktop group."""

class DesktopGroupServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing desktop group resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.GetDesktopGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_group_pb2.DesktopGroup, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_group_pb2.DesktopGroup]]:
        """Returns the specified desktop group resource.

        To get the list of available desktop groups, make a [List] request.
        """

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupsResponse]]:
        """Retrieves the list of desktop group resources."""

    @abc.abstractmethod
    def ListDesktops(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupDesktopsResponse]]:
        """Retrieves the list of desktops resources."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.ListDesktopGroupOperationsResponse]]:
        """Returns list of the operations for the specified desktop group."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.CreateDesktopGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates desktop group in the specified folder."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.UpdateDesktopGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates desktop group properties"""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_group_service_pb2.DeleteDesktopGroupRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified desktop group."""

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.ListAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.access.access_pb2.ListAccessBindingsResponse]]:
        """Returns a list of the access bindings for the specified desktop group."""

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.SetAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sets access bindings for the specified desktop group."""

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.access.access_pb2.UpdateAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates access bindings of the specified desktop group."""

def add_DesktopGroupServiceServicer_to_server(servicer: DesktopGroupServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

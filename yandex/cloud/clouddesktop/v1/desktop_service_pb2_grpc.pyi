"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.clouddesktop.v1.desktop_pb2
import yandex.cloud.clouddesktop.v1.desktop_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class DesktopServiceStub:
    """A set of methods for managing desktop resources."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.GetDesktopRequest,
        yandex.cloud.clouddesktop.v1.desktop_pb2.Desktop,
    ]
    """Returns the specified desktop resource.

    To get the list of available desktops, make a [List] request.
    """

    GetRdpFile: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.GetRdpFileRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.RdpFileResponse,
    ]
    """Returns a RDP file for the specified desktop."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsResponse,
    ]
    """Retrieves the list of desktop resources."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsResponse,
    ]
    """Returns list of the operations for the specified desktop."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.CreateDesktopRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates desktop in the specified folder."""

    UpdateProperties: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.UpdatePropertiesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates desktop properties."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.DeleteDesktopRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified desktop."""

    ResetPassword: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordResponse,
    ]
    """Reset password"""

    Restart: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.RestartRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Restart the specified desktop."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.UpdateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sync desktop with group configuration"""

    Start: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.StartRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Start the specified desktop."""

    Stop: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.StopRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stop the specified desktop."""

class DesktopServiceAsyncStub:
    """A set of methods for managing desktop resources."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.GetDesktopRequest,
        yandex.cloud.clouddesktop.v1.desktop_pb2.Desktop,
    ]
    """Returns the specified desktop resource.

    To get the list of available desktops, make a [List] request.
    """

    GetRdpFile: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.GetRdpFileRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.RdpFileResponse,
    ]
    """Returns a RDP file for the specified desktop."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsResponse,
    ]
    """Retrieves the list of desktop resources."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsResponse,
    ]
    """Returns list of the operations for the specified desktop."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.CreateDesktopRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Creates desktop in the specified folder."""

    UpdateProperties: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.UpdatePropertiesRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Updates desktop properties."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.DeleteDesktopRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Deletes the specified desktop."""

    ResetPassword: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordRequest,
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordResponse,
    ]
    """Reset password"""

    Restart: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.RestartRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Restart the specified desktop."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.UpdateRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Sync desktop with group configuration"""

    Start: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.StartRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Start the specified desktop."""

    Stop: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.clouddesktop.v1.desktop_service_pb2.StopRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]
    """Stop the specified desktop."""

class DesktopServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing desktop resources."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.GetDesktopRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_pb2.Desktop, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_pb2.Desktop]]:
        """Returns the specified desktop resource.

        To get the list of available desktops, make a [List] request.
        """

    @abc.abstractmethod
    def GetRdpFile(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.GetRdpFileRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_service_pb2.RdpFileResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_service_pb2.RdpFileResponse]]:
        """Returns a RDP file for the specified desktop."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopsResponse]]:
        """Retrieves the list of desktop resources."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_service_pb2.ListDesktopOperationsResponse]]:
        """Returns list of the operations for the specified desktop."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.CreateDesktopRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Creates desktop in the specified folder."""

    @abc.abstractmethod
    def UpdateProperties(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.UpdatePropertiesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Updates desktop properties."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.DeleteDesktopRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Deletes the specified desktop."""

    @abc.abstractmethod
    def ResetPassword(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordResponse, collections.abc.Awaitable[yandex.cloud.clouddesktop.v1.desktop_service_pb2.ResetPasswordResponse]]:
        """Reset password"""

    @abc.abstractmethod
    def Restart(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.RestartRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Restart the specified desktop."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.UpdateRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Sync desktop with group configuration"""

    @abc.abstractmethod
    def Start(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.StartRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Start the specified desktop."""

    @abc.abstractmethod
    def Stop(
        self,
        request: yandex.cloud.clouddesktop.v1.desktop_service_pb2.StopRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]:
        """Stop the specified desktop."""

def add_DesktopServiceServicer_to_server(servicer: DesktopServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
